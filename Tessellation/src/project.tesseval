// Name: Wesley Strong
// NetID: wfs51
// Date: 12/1/17
// Tessilation evaluation shader
#version 410

layout(triangles) in;
in vec3 tcPosition[];
in vec3 tcNormals[];
in vec2 tcTexcords[];
patch in vec4 tcColor;
out vec3 tePosition;
out vec3 teNormals;
out vec2 teTexcords;
out vec4 teColors;
uniform mat4 MVP;
vec2 interpolate2D(vec2 v0, vec2 v1, vec2 v2)
{
   	return vec2(gl_TessCoord.x) * v0 + vec2(gl_TessCoord.y) * v1 + vec2(gl_TessCoord.z) * v2;
}
vec3 interpolate3D(vec3 v0, vec3 v1, vec3 v2)
{
   	return vec3(gl_TessCoord.x) * v0 + vec3(gl_TessCoord.y) * v1 + vec3(gl_TessCoord.z) * v2;
}
void main(void){ 
	gl_Position = MVP * ((gl_TessCoord.x * gl_in[0].gl_Position) +
						(gl_TessCoord.y * gl_in[1].gl_Position) +
						(gl_TessCoord.z * gl_in[2].gl_Position));

	teNormals = interpolate3D(tcNormals[0],tcNormals[1],tcNormals[2]);
	teNormals = normalize(teNormals);
	teTexcords = interpolate2D(tcTexcords[0], tcTexcords[1], tcTexcords[2]);
	tePosition = interpolate3D(tcPosition[0], tcPosition[1], tcPosition[2]);
	teColors = tcColor;
}
//